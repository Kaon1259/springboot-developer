name: CI

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: build/libs/*.jar

      - name: Build with Gradle (Windows)
        run: .\gradlew.bat clean build -x test

      # ---------------------------------------------------------------
      # [수정 1] Jar 파일 이름을 정확하게 추출하는 단계 (가장 중요)
      # ---------------------------------------------------------------
      - name: Get Built Jar File Name
        id: get-jar
        # PowerShell을 사용하여 ./build/libs에서 .jar 파일을 찾고 파일명을 출력 변수로 설정합니다.
        run: |
          # 프로젝트에 맞는 Jar 파일 패턴을 설정하세요. (일반적으로 *-SNAPSHOT.jar)
          $pattern = "*-SNAPSHOT.jar" 
          $file = Get-ChildItem -Path ./build/libs/ -Filter $pattern | Select-Object -First 1
          if ($file) {
              echo "jar_filename=$($file.Name)" >> $env:GITHUB_OUTPUT
          } else {
              Write-Error "Error: No JAR file found in ./build/libs/ matching $pattern"
          }
        shell: powershell

      # --- 아티팩트 업로드 (디버깅용) ---
      # 업로드 아티팩트 경로를 Jar 파일 대신 ZIP 파일로 변경했습니다.
      - name: Upload build artifacts
        if: steps.get-jar.outputs.jar_filename
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          # 생성된 ZIP 파일을 아티팩트로 업로드
          path: deployment-package.zip

      # ---------------------------------------------------------------
      # [오류 해결] Jar 파일을 ZIP으로 압축하는 단계 추가
      # 이 단계를 통해 배포 액션의 경로 처리 문제를 회피합니다.
      # ---------------------------------------------------------------
      - name: Create deployment package (ZIP)
        id: create-zip
        run: |
          # PowerShell을 사용하여 Jar 파일을 deployment-package.zip으로 압축합니다.
          $jarPath = "./build/libs/${{ steps.get-jar.outputs.jar_filename }}"
          $zipPath = "deployment-package.zip"
          Compress-Archive -Path $jarPath -DestinationPath $zipPath
        shell: powershell

      - name: Get Current Time
        uses: josStorer/get-current-time@v2.0.2
        id: current-time
        with:
          format: YYYY-MM-DDTHH-mm-ss
          utcOffset: "+09:00"


      - name: Deploy to Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v22
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: springboot-developer
          environment_name: Springboot-developer-env
          version_label: v-${{ github.run_number }}-${{ github.sha }}
          region: ${{ secrets.AWS_REGION }}
          deployment_package: deployment-package.zip
